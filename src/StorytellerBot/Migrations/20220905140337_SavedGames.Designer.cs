// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorytellerBot.Data;

#nullable disable

namespace StorytellerBot.Migrations
{
    [DbContext(typeof(AdventureContext))]
    [Migration("20220905140337_SavedGames")]
    partial class SavedGames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("StorytellerBot.Models.Adventure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ScriptFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Adventure");
                });

            modelBuilder.Entity("StorytellerBot.Models.CommandProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Argument")
                        .HasColumnType("TEXT");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CommandProgresses");
                });

            modelBuilder.Entity("StorytellerBot.Models.CurrentGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SavedStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SavedStatusId")
                        .IsUnique();

                    b.ToTable("CurrentGames");
                });

            modelBuilder.Entity("StorytellerBot.Models.SavedStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdventureId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("StoryState")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AdventureId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedStatus");
                });

            modelBuilder.Entity("StorytellerBot.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommandProgressId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentGameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommandProgressId")
                        .IsUnique();

                    b.HasIndex("CurrentGameId")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("StorytellerBot.Models.CurrentGame", b =>
                {
                    b.HasOne("StorytellerBot.Models.SavedStatus", "SavedStatus")
                        .WithOne()
                        .HasForeignKey("StorytellerBot.Models.CurrentGame", "SavedStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavedStatus");
                });

            modelBuilder.Entity("StorytellerBot.Models.SavedStatus", b =>
                {
                    b.HasOne("StorytellerBot.Models.Adventure", "Adventure")
                        .WithMany()
                        .HasForeignKey("AdventureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorytellerBot.Models.User", "User")
                        .WithMany("SavedGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adventure");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StorytellerBot.Models.User", b =>
                {
                    b.HasOne("StorytellerBot.Models.CommandProgress", "CommandProgress")
                        .WithOne("User")
                        .HasForeignKey("StorytellerBot.Models.User", "CommandProgressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("StorytellerBot.Models.CurrentGame", "CurrentGame")
                        .WithOne("User")
                        .HasForeignKey("StorytellerBot.Models.User", "CurrentGameId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CommandProgress");

                    b.Navigation("CurrentGame");
                });

            modelBuilder.Entity("StorytellerBot.Models.CommandProgress", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("StorytellerBot.Models.CurrentGame", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("StorytellerBot.Models.User", b =>
                {
                    b.Navigation("SavedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
